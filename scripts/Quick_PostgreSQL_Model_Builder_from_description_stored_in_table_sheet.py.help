{"Field_with_column_name": "Field containing the column name", "ALG_DESC": "This script is intended to provide a very quick way to generate all the needed SQL code to create some tables in a PostgreSQL database. You just need to store some information about tables and columns in 2 simple data sheet ( such as a CSV file or DBF file) written with LibreOffice (or MS Excel for example):\n\n* A table sheet with information on tables to be created : name, schema, comment\n\n* A table sheet with information on columns to be added to the tables: table name, column name, type, not null status, primary key status, constraint (only one), comment and index status.\n\nBasically, you just need to open LibreOffice (or other software which can write in sheets) , and; \n\n* create 2 files with the needed columns,\n* fill each table sheet with the needed information,\n* export them to CSV or DBF,\n* open them in QGIS,\n* run the script.\n\nThe script will create the SQL content and:\n* save it to the destination file chosen by the user\n* output the SQL string to allow the use in models (for example with the PostGis run query tool)\n\nIt has been tested with PostgreSQL 9.3 and above.", "ALG_CREATOR": "Micha\u00ebl DOUCHIN (3liz)", "Layer_containing_columns_description": "QGIS layer containing information on columns to be added to database tables.", "Field_with_column_index_status": "Use the string value '1' to set an automatic index on the column. This will need some improvement in a future version of the script.", "Field_with_column_table_name": "The field which contains the name of the table for the column to create.", "Field_with_column_comment": "You can add any comment. Single quotes are automatically escaped by the script.", "Field_with_column_primary_key_status": "Use the string value '1' to set the column as PRIMARY KEY", "Field_with_column_type": "Use only types allowed in PostgreSQL, for example :\n\n* integer\n* float\n* text\n* boolean\n* date\n* timestamp\netc.", "Field_with_column_not_null_status": "Use the string value '1' to set the column constraint NOT NULL", "Field_with_table_comment": "Some comment for the table (won't be used if empty)", "Field_with_table_name": "Table name", "Layer_containing_tables_description": "The QGIS layer containing the definition of the tables. This layer must contain 3 columns, one for each information:\n\n* name of the table\n* schema of the table (won't be used if empty)\n* comment of the table (won't be used if empty)", "ALG_VERSION": "1.0", "ALG_HELP_CREATOR": "Micha\u00ebl DOUCHIN (3liz)", "sql": "A string output, which can be used when using this script inside a model, for example combined with the \"PostGIS Execute SQL\" alg", "Field_with_table_schema": "Schema for the table (won't be used if empty)", "Output_SQL_file": "Output file created by the script as a result.\n\nPlease check this file before using it, and modify it to fill your need !", "Field_with_column_constraint": "Add description for a constraint (only one possible), with the name of the constraint and its definition. For example:\n\n* foreign key :  use the following type of string\n\nmytable_mycol_fk FOREIGN KEY (mycol) REFERENCES myforeigntable (myfkey) ON DELETE CASCADE;\n\n* constraint on size :\n\nmycol_size_check CHECK (char_length(mycol) = 5);"}